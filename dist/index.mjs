var e={async fetch(e,s,n){try{return await t(e,s,n)}catch(e){return console.log(e),new Response(e.message)}},async scheduled(e,t){try{return await n(e,t)}catch(e){return console.log(e),new Response(e.message)}}};const t=async(e,t,n)=>{let a;const o=t.TelegramToken,r=new URL(e.url).pathname.split("/").filter((e=>e));let i;if(void 0===r[0])i=new Response("welcome",{status:200,headers:{"Content-Type":"text/plain","X-Version":"0.1.0"}});else if("telegram"===r[0]&&"POST"===e.method){let t=await e.json();const n=e.headers.get("Cf-Webhook-Auth");if(!n)return new Response("Bad Request",{status:400,headers:{"X-Version":"0.1.0"}});if("46b05bb8-8a5e-4f09-9ed3-5f58ff3bc972"!==n)return new Response("Unauthorized",{status:401,headers:{"X-Version":"0.1.0"}});a=+r[0],await s(a,t.text,o),i=new Response("OK",{status:200,headers:{"Content-Type":"text/plain","X-Version":"0.1.0"}})}else i=void 0===r[0]&&"GET"===e.method?new Response("OK",{status:200,headers:{"Content-Type":"text/plain","X-Version":"0.1.0"}}):new Response("Not Found",{status:404,headers:{"X-Version":"0.1.0"}});return i},s=async(e,t,s)=>{const n=async(e,t,s)=>(await fetch(`https://api.telegram.org/bot${s}/sendMessage`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({chat_id:e,text:t})}),!0);if(Array.isArray(e))for(let a of e)await n(a,t,s);else await n(e,t,s);return!0},n=async(e,t,s)=>{};export{e as default};
//# sourceMappingURL=index.mjs.map
